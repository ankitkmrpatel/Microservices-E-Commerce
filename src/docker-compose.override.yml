version: '3.4'

services:
  catalogdb:
    container_name: catalog.db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  basketdb:
    container_name: basket.db
    restart: always
    ports:
      - "6379:6379"

  discountdb:
    container_name: discount.db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=G17Hub@2321
      - POSTGRES_DB=DiscountDb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      
  orderdb:
    container_name: order.db
    environment:
      - SA_PASSWORD=G17Hub@2321
      - ACCEPT_EULA=Y
    restart: always
    ports:
      - "1433:1433"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      
  rabbitmq:
    container_name: rabbitmq.events
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  pgadmin.portal:
    container_name: pgadmin.portal
    environment:
      - PGADMIN_DEFAULT_EMAIL=ankit@sflhub.com
      - PGADMIN_DEFAULT_PASSWORD=G17Hub@2321
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8088:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - "DatabaseSettings:ConnectionString=mongodb://host.docker.internal:27017"
      - "DatabaseSettings:DatabaseName=CatalogDb"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - catalogdb
    ports:
      - "8000:8080"

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - "CacheSettings:ConnectionString=http://host.docker.internal:6379"
      - "gRPCSettings:DiscountUrl=http://host.docker.internal:8003"
      - "EventBusSettings:HostAddress=amqp://guest:guest@host.docker.internal:5672"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - basketdb
      - rabbitmq
    ports:
      - "8001:8080"

  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - "DatabaseSettings:ConnectionString=Server=host.docker.internal;Port=5432;Database=DiscountDb;User Id=admin;Password=G17Hub@2321;"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - discountdb
    ports:
      - "8002:8080"

  discount.grpc:
    container_name: discount.grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - "DatabaseSettings:ConnectionString=Server=host.docker.internal;Port=5432;Database=DiscountDb;User Id=admin;Password=G17Hub@2321;"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - discountdb
    ports:
      - "8003:8080"

  ordering.api:
    container_name: ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - "ConnectionStrings:OrderingDb=Server=host.docker.internal;Database=OrderDb;User Id=sa;Password=G17Hub@2321;TrustServerCertificate=True;"
      - "EventBusSettings:HostAddress=amqp://guest:guest@host.docker.internal:5672"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - orderdb
      - rabbitmq
    ports:
      - "8004:8080"

  shopping.api.gateway:
    container_name: shopping.api.gateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - catalog.api
      - basket.api
      - discount.api
      - ordering.api
    ports:
      - "8010:8080"

  shopping.api.aggregator:
    container_name: shopping.api.aggregator
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - "ApiSettings:CatalogUrl=http://host.docker.internal:8000"
      - "ApiSettings:BasketUrl=http://host.docker.internal:8001"
      - "ApiSettings:OrderingUrl=http://host.docker.internal:8004"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - catalog.api
      - basket.api
      - ordering.api
    ports:
      - "8005:8080"

  aspnetrunbasics:
    container_name: aspnetrun.webui
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - "ApiSettings:GatewayAddress=http://shopping.api.gateway"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - shopping.api.gateway
      - catalog.api
      - basket.api
      - discount.api
      - ordering.api
    ports:
      - "8006:8080"
 
  shopping.app.webstatus:
    container_name: shopping.app.webstatus
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - HealthChecksUI__HealthChecks__0__Name=Catalog Health Check
      - HealthChecksUI__HealthChecks__0__Uri=http://catalog.api/hc
      - HealthChecksUI__HealthChecks__1__Name=Basket Health Check
      - HealthChecksUI__HealthChecks__1__Uri=http://basket.api/hc
      - HealthChecksUI__HealthChecks__2__Name=Discount Health Check
      - HealthChecksUI__HealthChecks__2__Uri=http://discount.api/hc
      - HealthChecksUI__HealthChecks__3__Name=Ordering Health Check
      - HealthChecksUI__HealthChecks__3__Uri=http://ordering.api/hc
      - HealthChecksUI__HealthChecks__4__Name=Shopping Aggregator Health Check
      - HealthChecksUI__HealthChecks__4__Uri=http://shopping.api.aggregator/hc
      - HealthChecksUI__HealthChecks__5__Name=AspnetRunBasics WebMVC Health Check
      - HealthChecksUI__HealthChecks__5__Uri=http://aspnetrunbasics/hc  
    depends_on:
      - shopping.api.gateway
      - catalog.api
      - basket.api
      - discount.api
      - ordering.api
    ports:
      - "8007:8080"

  elasticsearch:
    container_name: elastic.search.log
    environment:
        - xpack.monitoring.enabled=true
        - xpack.watcher.enabled=false
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - discovery.type=single-node
    ports:
        - "9200:9200"
    volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    container_name: kibana.dist.log
    environment:
        - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
        - elasticsearch
    ports:
        - "5601:5601" 